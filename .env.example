# CloudSentinel Environment Configuration
# Copy this file to .env and update the values for your environment

# Database Configuration
DATABASE_URL=postgresql://username:password@localhost:5432/cloudsentinel
DATABASE_HOST=localhost
DATABASE_PORT=5432
DATABASE_NAME=cloudsentinel
DATABASE_USER=username
DATABASE_PASSWORD=password

# Redis Configuration (for Celery)
REDIS_URL=redis://localhost:6379/0
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_DB=0

# Celery Configuration
CELERY_BROKER_URL=redis://localhost:6379/0
CELERY_RESULT_BACKEND=redis://localhost:6379/0

# Application Configuration
APP_NAME=CloudSentinel
APP_VERSION=1.0.0
APP_ENV=development
DEBUG=true
SECRET_KEY=your-secret-key-here-change-in-production
API_HOST=localhost
API_PORT=8000

# JWT Configuration
JWT_SECRET_KEY=your-jwt-secret-key-here
JWT_ALGORITHM=HS256
JWT_ACCESS_TOKEN_EXPIRE_MINUTES=30
JWT_REFRESH_TOKEN_EXPIRE_DAYS=7

# CORS Configuration
CORS_ORIGINS=["http://localhost:3000", "http://localhost:8080"]
CORS_ALLOW_CREDENTIALS=true

# Logging Configuration
LOG_LEVEL=INFO
LOG_FORMAT=json
LOG_FILE_PATH=/var/log/cloudsentinel/app.log
LOG_MAX_FILE_SIZE=10MB
LOG_BACKUP_COUNT=5

# AWS Configuration (Optional - can be configured per scan)
AWS_DEFAULT_REGION=us-east-1
AWS_ACCESS_KEY_ID=your-aws-access-key
AWS_SECRET_ACCESS_KEY=your-aws-secret-key
AWS_SESSION_TOKEN=your-aws-session-token

# Azure Configuration (Optional - can be configured per scan)
AZURE_SUBSCRIPTION_ID=your-azure-subscription-id
AZURE_TENANT_ID=your-azure-tenant-id
AZURE_CLIENT_ID=your-azure-client-id
AZURE_CLIENT_SECRET=your-azure-client-secret

# GCP Configuration (Optional - can be configured per scan)
GCP_PROJECT_ID=your-gcp-project-id
GCP_SERVICE_ACCOUNT_PATH=/path/to/service-account.json
GOOGLE_APPLICATION_CREDENTIALS=/path/to/service-account.json

# Email Configuration (for notifications)
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USERNAME=your-email@gmail.com
SMTP_PASSWORD=your-email-password
SMTP_USE_TLS=true
EMAIL_FROM=noreply@cloudsentinel.com

# Slack Configuration (for notifications)
SLACK_BOT_TOKEN=xoxb-your-slack-bot-token
SLACK_SIGNING_SECRET=your-slack-signing-secret
SLACK_DEFAULT_CHANNEL=#security-alerts

# PagerDuty Configuration (for critical alerts)
PAGERDUTY_INTEGRATION_KEY=your-pagerduty-integration-key
PAGERDUTY_API_TOKEN=your-pagerduty-api-token

# Webhook Configuration
WEBHOOK_SECRET=your-webhook-secret
WEBHOOK_TIMEOUT=30

# Security Configuration
ENCRYPTION_KEY=your-encryption-key-for-sensitive-data
PASSWORD_MIN_LENGTH=8
SESSION_TIMEOUT_MINUTES=60
MAX_LOGIN_ATTEMPTS=5
LOCKOUT_DURATION_MINUTES=15

# Rate Limiting
RATE_LIMIT_PER_MINUTE=100
RATE_LIMIT_BURST=200

# File Storage Configuration
UPLOAD_MAX_SIZE=10MB
REPORTS_STORAGE_PATH=/var/cloudsentinel/reports
TEMP_STORAGE_PATH=/tmp/cloudsentinel

# Performance Configuration
MAX_CONCURRENT_SCANS=5
SCAN_TIMEOUT_MINUTES=60
DATABASE_POOL_SIZE=20
DATABASE_MAX_OVERFLOW=30

# Monitoring Configuration
PROMETHEUS_ENABLED=true
PROMETHEUS_PORT=9090
HEALTH_CHECK_INTERVAL=30

# Development Configuration
DEV_MOCK_CLOUD_APIS=false
DEV_SAMPLE_DATA=false
DEV_AUTO_LOGIN=false

# Frontend Configuration
FRONTEND_URL=http://localhost:3000
API_BASE_URL=http://localhost:8000

# Third-party Integrations
VIRUSTOTAL_API_KEY=your-virustotal-api-key
SHODAN_API_KEY=your-shodan-api-key

# Compliance Frameworks
ENABLE_CIS_BENCHMARKS=true
ENABLE_NIST_FRAMEWORK=true
ENABLE_ISO27001=true
ENABLE_SOC2=true

# Report Generation
DEFAULT_REPORT_FORMAT=pdf
REPORT_LOGO_PATH=/path/to/logo.png
REPORT_COMPANY_NAME=Your Company Name

# Backup Configuration
BACKUP_ENABLED=true
BACKUP_SCHEDULE=0 2 * * *
BACKUP_RETENTION_DAYS=30
BACKUP_STORAGE_PATH=/var/backups/cloudsentinel

# Cache Configuration
CACHE_TTL_SECONDS=3600
CACHE_MAX_SIZE=1000

# Feature Flags
FEATURE_MULTI_TENANT=false
FEATURE_API_VERSIONING=true
FEATURE_REAL_TIME_SCANNING=true
FEATURE_CUSTOM_POLICIES=true

# Timezone
TZ=UTC

version: '3.8'

services:
  # FastAPI Backend
  api:
    build:
      context: .
      dockerfile: deployment/Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://cloudsentinel:cloudsentinel123@postgres:5432/cloudsentinel
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - postgres
      - redis
    volumes:
      - ./logs:/app/logs
    networks:
      - cloudsentinel-network

  # Celery Worker
  worker:
    build:
      context: .
      dockerfile: deployment/Dockerfile
    command: celery -A src.tasks.scan_tasks worker --loglevel=info --queues=scans,alerts,maintenance
    environment:
      - DATABASE_URL=postgresql://cloudsentinel:cloudsentinel123@postgres:5432/cloudsentinel
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - postgres
      - redis
    volumes:
      - ./logs:/app/logs
    networks:
      - cloudsentinel-network

  # Celery Beat Scheduler
  scheduler:
    build:
      context: .
      dockerfile: deployment/Dockerfile
    command: celery -A src.tasks.scan_tasks beat --loglevel=info
    environment:
      - DATABASE_URL=postgresql://cloudsentinel:cloudsentinel123@postgres:5432/cloudsentinel
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - postgres
      - redis
    volumes:
      - ./logs:/app/logs
    networks:
      - cloudsentinel-network

  # React Frontend
  frontend:
    build:
      context: ./src/frontend
      dockerfile: ../../deployment/frontend.Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - api
    networks:
      - cloudsentinel-network

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=cloudsentinel
      - POSTGRES_USER=cloudsentinel
      - POSTGRES_PASSWORD=cloudsentinel123
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./deployment/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
    ports:
      - "5432:5432"
    networks:
      - cloudsentinel-network

  # Redis for Celery
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - cloudsentinel-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./deployment/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - api
      - frontend
    networks:
      - cloudsentinel-network

volumes:
  postgres_data:

networks:
  cloudsentinel-network:
    driver: bridge
